
<aside class="sidebar-right night box">
  <% if(is_archive()) { %>
  <div class="sidebar-item">
    <h2><%= __('sidebar-right.locate_fast') %></h2>
    <% 
    var sb = [];
    site.posts.each(function(post) {
      var ssb = post;
      sb.push(ssb);
    });

    // 按日期降序排序
    sb.sort(function(a, b) {
      var dateA = new Date(a.date);
      var dateB = new Date(b.date);
      return dateB - dateA;
    });

    var postsByYear = {};

    sb.forEach(function(post) {
      var date = new Date(post.date);
      var year = date.getFullYear();
      var month = date.getMonth() + 1; // 月份从0开始，所以加1
      var day = date.getDate();

      if (!postsByYear[year]) {
        postsByYear[year] = {};
      }
      if (!postsByYear[year][month]) {
        postsByYear[year][month] = {};
      }
      if (!postsByYear[year][month][day]) {
        postsByYear[year][month][day] = [];
      }
      postsByYear[year][month][day].push(post);
    });

    // 提取所有年份并按降序排序
    var years = Object.keys(postsByYear).sort((a, b) => b - a);

    years.forEach(year => {
      // 提取所有月份并按降序排序
      var months = Object.keys(postsByYear[year]).sort((a, b) => b - a);

      months.forEach(month => {
        // 提取所有日期并按降序排序
        var days = Object.keys(postsByYear[year][month]).sort((a, b) => b - a);

        days.forEach(day => {
          // 遍历每个日期及其对应的文章
          postsByYear[year][month][day] = postsByYear[year][month][day];
        });
      });
    });
    %>

    <% years.forEach(year => { %>
      <details class="night">
        <summary class="year-reverse night"> <i class="fa fa-globe " aria-hidden="true"></i><%= year %></summary>
        <% var months = Object.keys(postsByYear[year]).sort((a, b) => b - a); %>
        <% months.forEach(month => { %>
          <details>
            <summary class="month-reverse night"><i class="fa fa-moon" aria-hidden="true"></i><%= month %></summary>
            <% var days = Object.keys(postsByYear[year][month]).sort((a, b) => b - a); %>
            <% days.forEach(day => { %>
              <details>
                <summary class="day-reverse night"><i class="fa fa-sun" aria-hidden="true"></i><%= day %></summary>
                <ul>
                  <% postsByYear[year][month][day].forEach(post => { %>
                    <li><a href="<%= url_for(post.path) %>"><%= post.title %></a></li>
                  <% }) %>
                </ul>
              </details>
            <% }) %>
          </details>
        <% }) %>
      </details>
    <% }) %>
  </div>
  <% } else if(page.path==='/tags'||page.path=='tags/index.html'||/^tags\/.*\.html$/.test(page.path)) {
      var rightsidebar = [];
    site.tags.each(function(post) {
      var ssb = post;
      rightsidebar.push(ssb);
    });

    // 按日期降序排序
    rightsidebar.sort(function(a, b) {
      var lengtha = a.length;
      var lengthb = b.length;
      return lengthb - lengtha;
    });   
   %>
   <ul class="sidebar-tags">
   <% for(var i=0;i<rightsidebar.length;i++){ %>
    <li class="rtag-link"><a href="<%= url_for(rightsidebar[i].path) %>"><p class="hover-underline"><%= rightsidebar[i].name %>-<%= rightsidebar[i].length%></p></a></li>
    <%} %>
   </ul>
   %>
  <% } else if(page.path==='/categories'||page.path=='categories/index.html'||/^categories\/.*\.html$/.test(page.path)) { %>
    <ul class="rcategory-li">
      <% site.categories.each(function(category) { %>
      <li class="night categories-li">
        <a class="hover-underline" href="<%= url_for(category.path) %>"><%= category.name %>-<%= category.length%></a>
      </li>
      <%})%>
      </ul>
  <%} else { if(theme.ipshow.enable){%>
    <div class="where is your ip">
  <h3 class="ipshow"><%= __('sidebar-right.ip_show') %></h3>
  <img class="nofancybox" src="https://tool.lu/netcard/" rel="https://tool.lu/ip/" alt="show your ip">
</div>
  <%}%>
  <%if(theme.timeshow.enable){%>
    <div class="time">  
    <h3 class="timetitle"><%= __('sidebar-right.time_show') %></h3>
    <div class="timeshow" id="currentDateTime"></div>  
      
    </div>
    <script>
document.addEventListener('DOMContentLoaded', function() {
    // 创建一个新的Date对象，它将包含当前的本地时间
    const now = new Date();

    // 定义一个函数来格式化日期和时间
    function formatDateTime(now, format) {
        const year = now.getFullYear();
        const month = (now.getMonth() + 1).toString().padStart(2, '0');
        const day = now.getDate().toString().padStart(2, '0');
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        const seconds = now.getSeconds().toString().padStart(2, '0');

        // 替换格式字符串中的占位符
        return format.replace(/YYYY/g, year)
                     .replace(/MM/g, month)
                     .replace(/DD/g, day)
                     .replace(/HH/g, hours)
                     .replace(/mm/g, minutes)
                     .replace(/ss/g, seconds);
    }

    // 从配置中获取时间格式
    const timeFormat = "<%= theme.timeshow.format %>";

    // 更新时间的函数
    function updateTime() {
        const now = new Date();
        const formattedDateTime = formatDateTime(now, timeFormat);
        document.getElementById('currentDateTime').textContent = formattedDateTime;
    }

    // 初始调用更新时间函数
    updateTime();

    // 每1000毫秒（1秒）调用一次updateTime函数，更新时间
    setInterval(updateTime, 1000);
});
</script>
<%}%>
<% if(is_post()) {%>
<div class="thispost-tags-container">
  <i class="fa fa-tags"></i>
  <br>
  <div class="thispost-tags">
    <% page.tags.each(function(tag) { %>
    <a class="thispost-tag hover-underline"km href="<%= url_for('tags/' + tag.name) %>">#<%= tag.name %></a>
    <% }); %>
  </div>
</div>
<div class="thispost-categories-container">
  <i class="fa fa-th-large"></i>
  <br>
  <div class="thispost-categories">
    <% page.categories.each(function(category) { %>
    <a class="thispost-category hover-underline" href="<%= url_for('categories/' + category.name) %>"><%= category.name %></a>
    <% }); %>
  </div>
</div>
<%}%>
   <div>
    <%- toc(page.content, {
  class: 'toc', // 目录的 CSS 类名
  class_item: 'toc-item', // 目录元素的 CSS 类名
  class_link: 'toc-link', // 目录内链接的 CSS 类名
  class_text: 'toc-text', // 目录链接内文本的 CSS 类名
  class_child: 'toc-child', // 子目录的 CSS 类名
  class_number: 'toc-number', // 目录序号的 CSS 类名
  class_level: 'toc-level', // 目录层级的 CSS 类名前缀
  list_number: true, // 是否显示编号
  max_depth: 6, // 生成 TOC 的最大深度
  min_depth: 1, // 生成 TOC 的最小深度
  max_items: Infinity // 生成的 toc 的最大项目数
}) %>
  </div>
  <%}%>
</aside>